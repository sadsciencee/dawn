{%- liquid
    # evaluate a customer condition

    # params:
    #   condition (offer_condition_customer)
    #   collect_logs (boolean, optional)

    # returns string (boolean::log_lines)

    # consts
    assign result_delimiter = '::'
    assign log_delimiter = '___LOG___'

    # set params
    assign collect_logs = collect_logs | default: false

    # set output vars
    assign result = 'false'

    # setup default evals
    assign tags_include_eval = false
    assign tags_exclude_eval = false

    # string list requirements have different null values depending on if they were never set, set to blank, etc...
    assign tags_include_empty = false
    if condition.tags_include.value == empty or condition.tags_include.value.size == 0 or condition.tags_include.value == blank
        assign tags_include_eval = true
        assign tags_include_empty = true
    endif
    if condition.tags_exclude.value == empty or condition.tags_exclude.value.size == 0 or condition.tags_exclude.value == blank
        assign tags_exclude_eval = true
    endif

    if customer
        # check all condition requirements against the current customer
        if tags_include_eval == false
            for tag in condition.tags_include.value
                if customer.tags contains tag
                    assign tags_include_eval = true
                    break
                endif
            endfor
        endif
        if tags_exclude_eval == false
            for tag in condition.tags_exclude.value
                if customer.tags contains tag
                    break
                endif
                if forloop.last
                    assign tags_exclude_eval = true
                endif
            endfor
        endif
    else
        # exclusions are always true for guest customers, even if requirements are not empty
        assign tags_exclude_eval = true
    endif



    assign log_line = log_line | append: 'condition.tags_include.value=' | append: condition.tags_include.value | append: ',condition.tags_exclude.value=' | append: condition.tags_exclude.value | append: log_delimiter
    assign log_line = log_line | append: 'tags_include_eval=' | append: tags_include_eval | append: ',tags_exclude_eval=' | append: tags_exclude_eval


    # tags_exclude_eval must evaluate to true no matter what
    if tags_exclude_eval == true
        # if both include conditions are true, obviously return true
        # since empty evals are true, this includes the case where both fields are empty
        if tags_include_eval == true
            assign result = 'true'
            # if tags_include is not empty, and evaluates to true, the whole condition evaluates to true
        elsif tags_include_empty == false and tags_include_eval == true
            assign result = 'true'
        endif
    endif

    # return result to caller
    if collect_logs
        assign log_line = 'Condition "' | append: condition.label.value | append: '" evaluated to "' | append: result | append: '" ' | append: log_delimiter | append: log_line
        echo result | append: result_delimiter | append: log_line
    else
        echo result
    endif
-%}
