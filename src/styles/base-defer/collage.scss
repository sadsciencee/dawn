@import '../global/variables';
@import '../global/functions';
.collage-wrapper-title {
	margin-bottom: #{$ax30};
}

.collage__item > * {
	width: 100%;
}

.collage__item .card__content {
	flex-grow: initial;
}

.collage-card {
	border-radius: var(--border-radius);
	border: var(--border-width) solid rgba(#{$schemaColorForeground}, var(--border-opacity));
	padding: var(--image-padding);
}

/* Needed for gradient continuity with or without animation, background-attachment: local scopes the gradient to its container which happens automatically when a transform is applied (animation on scroll) */
.collage-card.gradient {
	transform: perspective(0);
}

.collage-card:after {
	content: '';
	position: absolute;
	z-index: -1;
	border-radius: var(--border-radius);
	box-shadow: $comboBoxShadow1;
	width: calc(var(--border-width) * 2 + 100%);
	height: calc(var(--border-width) * 2 + 100%);
	top: calc(var(--border-width) * -1);
	left: calc(var(--border-width) * -1);
}

.collage-card .media {
	border-radius: calc(var(--border-radius) - var(--border-width) - var(--image-padding));
}

.collage-card .deferred-media {
	overflow: visible;
}

.collage-card .deferred-media__poster:after {
	z-index: 1;
	outline-offset: #{$ax3};
}

.collage-card .deferred-media__poster:focus:after {
	box-shadow: $comboBoxShadow2;
	outline: $comboOutline1;
}

.collage-card .deferred-media__poster:focus-visible:after {
	box-shadow: $comboBoxShadow2;
	outline: $comboOutline1;
}

.collage-card .deferred-media__poster:focus:not(:focus-visible),
.collage-card .deferred-media__poster:focus:not(:focus-visible):after {
	outline: none;
	box-shadow: none;
}

.collage-card .deferred-media__poster:focus {
	outline: none;
	box-shadow: none;
}
@include media-query($s-down) {
	.collage {
		grid-column-gap: #{$xSpacingMobile};
		grid-row-gap: #{$ySpacingMobile};
	}

	.collage--mobile {
		grid-template-columns: repeat(2, minmax(0, 1fr));
	}

	.collage--mobile .collage__item--left:nth-child(3n - 2) {
		grid-column: span 2;
	}

	.collage--mobile .collage__item--left:nth-child(3n - 2):nth-last-child(2) {
		grid-column: span 1;
	}

	.collage--mobile .collage__item--left:nth-child(3n) {
		grid-column-start: 2;
	}

	.collage--mobile .collage__item--right:nth-child(3n - 2) {
		grid-column-start: 1;
	}

	.collage--mobile .collage__item--right:nth-child(3n - 2):last-child {
		grid-column: span 2;
	}

	.collage--mobile .collage__item--right:nth-child(3n - 1) {
		grid-column-start: 2;
	}

	.collage--mobile .collage__item--right:nth-child(3n) {
		grid-column: 1 / span 2;
	}
}
@include media-query($s-up) {
	.collage {
		grid-auto-flow: column;
		grid-column-gap: #{$xSpacingDesktop};
		grid-row-gap: #{$ySpacingDesktop};
		grid-template-columns: repeat(3, minmax(0, 1fr));
	}

	.collage__item--left:nth-child(3n - 2) {
		grid-column: 1 / span 2;
		grid-row: span 2;
	}

	.collage__item--left:nth-child(3n - 2):last-child {
		grid-column: 1 / span 3;
	}

	.collage__item--left:nth-child(3n - 1),
	.collage__item--left:nth-child(3n) {
		grid-column-start: 3;
	}

	.collage__item--left:nth-child(3n - 1):last-child {
		grid-row: span 2;
	}

	.collage__item--right:nth-child(3n - 2) {
		grid-column: 1 / span 1;
		grid-row: span 1;
	}

	.collage__item--right:nth-child(3n - 2):last-child {
		grid-column: 1 / span 3;
	}

	.collage__item--right:nth-child(3n - 1) {
		grid-column-start: 1;
	}

	.collage__item--right:nth-child(3n-1):last-child {
		grid-column: span 2;
	}

	.collage__item--right:nth-child(3n) {
		grid-column: 2 / span 2;
		grid-row: span 2;
	}

	.collage__item--collection:only-child,
	.collage__item--product:only-child {
		justify-self: center;
		max-width: ax(730);
		width: 100%;
	}
}
