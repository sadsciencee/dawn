{"version":3,"file":"pubsub-54ee595b.js","sources":["../src/scripts/theme/constants.ts","../src/scripts/theme/pubsub.ts"],"sourcesContent":["export const ON_CHANGE_DEBOUNCE_TIMER = 300;\n\nexport const PUB_SUB_EVENTS = {\n  cartUpdate: 'cart-update',\n  quantityUpdate: 'quantity-update',\n  variantChange: 'variant-change',\n  cartError: 'cart-error',\n};\n","// todo: add additional data types as needed\nimport { ProductVariant } from '@/scripts/types/api'\n\nexport type CartUpdateEvent = {\n\tsource: 'cart-items' | 'product-form'\n\tproductVariantId?: string\n}\n\nexport type CartErrorEvent = {\n\tsource: 'product-form'\n\tproductVariantId: string\n\terrors: string | string[] | { [key: string]: string[] }\n\tmessage: string\n}\n\nexport type VariantChangeEvent = {\n\tsource: 'product-form'\n\tdata: {\n\t\tsectionId: string\n\t\thtml: Document\n\t\tvariant: ProductVariant\n\t}\n}\n\nexport type PubSubEvent = CartUpdateEvent | CartErrorEvent | VariantChangeEvent | undefined\n\n// typeguards for events\n\nexport function isCartUpdateEvent(obj: PubSubEvent): obj is CartUpdateEvent {\n\tif (!obj) return false\n\tif (!('source' in obj)) return false\n\tif (!('productVariantId' in obj)) return false\n\treturn true\n}\n\nexport function isCartErrorEvent(obj: PubSubEvent): obj is CartErrorEvent {\n\tif (!obj) return false\n\tif (!('source' in obj)) return false\n\tif (!('productVariantId' in obj)) return false\n\tif (!('message' in obj)) return false\n\tif (!('errors' in obj)) return false\n\treturn true\n}\n\nexport function createVariantChangeEvent(event:VariantChangeEvent) {\n\tif (!isVariantChangeEvent(event)) {\n\t\tthrow new Error('Event is not a VariantChangeEvent')\n\t}\n\treturn event\n}\n\nexport function isVariantChangeEvent(obj: PubSubEvent): obj is VariantChangeEvent {\n\tif (!obj) return false\n\tif (!('data' in obj)) return false\n\tif (!('sectionId' in obj.data)) return false\n\tif (!('html' in obj.data)) return false\n\tif (!('variant' in obj.data)) return false\n\treturn true\n}\n\nexport type SubscriberCallback = (pubSubEvent: PubSubEvent) => void\n\nlet subscribers: Record<string, SubscriberCallback[]> = {}\n\nexport function subscribe(eventName: string, callback: SubscriberCallback) {\n\tif (subscribers[eventName] === undefined) {\n\t\tsubscribers[eventName] = []\n\t}\n\n\tsubscribers[eventName] = [...subscribers[eventName], callback]\n\n\treturn function unsubscribe() {\n\t\tsubscribers[eventName] = subscribers[eventName].filter((cb) => {\n\t\t\treturn cb !== callback\n\t\t})\n\t}\n}\n\nexport function publish(eventName: string, pubSubEvent: PubSubEvent = undefined) {\n\tif (subscribers[eventName]) {\n\t\tsubscribers[eventName].forEach((callback) => {\n\t\t\tcallback(pubSubEvent)\n\t\t})\n\t}\n}\n"],"names":["ON_CHANGE_DEBOUNCE_TIMER","PUB_SUB_EVENTS","isCartUpdateEvent","obj","isCartErrorEvent","createVariantChangeEvent","event","isVariantChangeEvent","subscribers","subscribe","eventName","callback","cb","publish","pubSubEvent"],"mappings":"AAAO,MAAMA,EAA2B,IAE3BC,EAAiB,CAC5B,WAAY,cACZ,eAAgB,kBAChB,cAAe,iBACf,UAAW,YACb,ECqBO,SAASC,EAAkBC,EAA0C,CAG3E,MAFI,GAACA,GACD,EAAE,WAAYA,IACd,EAAE,qBAAsBA,GAE7B,CAEO,SAASC,EAAiBD,EAAyC,CAKzE,MAJI,GAACA,GACD,EAAE,WAAYA,IACd,EAAE,qBAAsBA,IACxB,EAAE,YAAaA,IACf,EAAE,WAAYA,GAEnB,CAEO,SAASE,EAAyBC,EAA0B,CAC9D,GAAA,CAACC,EAAqBD,CAAK,EACxB,MAAA,IAAI,MAAM,mCAAmC,EAE7C,OAAAA,CACR,CAEO,SAASC,EAAqBJ,EAA6C,CAK7E,MAJA,GAACA,GACD,EAAE,SAAUA,IACZ,EAAE,cAAeA,EAAI,OACrB,EAAE,SAAUA,EAAI,OAChB,EAAE,YAAaA,EAAI,MAExB,CAIA,IAAIK,EAAoD,CAAA,EAExC,SAAAC,EAAUC,EAAmBC,EAA8B,CACtE,OAAAH,EAAYE,CAAS,IAAM,SAClBF,EAAAE,CAAS,EAAI,IAG1BF,EAAYE,CAAS,EAAI,CAAC,GAAGF,EAAYE,CAAS,EAAGC,CAAQ,EAEtD,UAAuB,CAC7BH,EAAYE,CAAS,EAAIF,EAAYE,CAAS,EAAE,OAAQE,GAChDA,IAAOD,CACd,CAAA,CAEH,CAEgB,SAAAE,EAAQH,EAAmBI,EAA2B,OAAW,CAC5EN,EAAYE,CAAS,GACxBF,EAAYE,CAAS,EAAE,QAASC,GAAa,CAC5CA,EAASG,CAAW,CAAA,CACpB,CAEH"}